{"version":3,"sources":["webpack:///./src/interfaces/interfaces/input.vue?7279","webpack:///src/interfaces/interfaces/input.vue","webpack:///./src/interfaces/interfaces/input.vue?65e0","webpack:///./src/interfaces/interfaces/input.vue","webpack:///./src/interfaces/interfaces/input.vue?9fb0","webpack:///./node_modules/@directus/extension-toolkit/mixins/interface.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","name","value","readonly","choices","options","placeholder","on","$event","$emit","staticRenderFns","component","module","exports","props","id","type","String","required","default","length","Number","Boolean","collection","primaryKey","Object","newItem","relation","fields","values","width","val","includes"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAACE,MAAM,CAAC,GAAKN,EAAIO,KAAK,MAAQP,EAAIQ,MAAM,SAAWR,EAAIS,SAAS,QAAUT,EAAIU,QAAQ,YAAcV,EAAIW,QAAQC,aAAaC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOd,EAAIe,MAAM,QAASD,QAC9RE,EAAkB,G,uFCctB,GACA,aACA,0CACA,gBACA,8DAFA,IAIA,QAJA,WAIA,WACA,KAEA,+BAkBA,OAhBA,8BACA,wBACA,8CAIA,0BACA,wBACA,8CAIA,uBACA,kCAGA,MC1C8V,I,wBCQ1VC,EAAY,eACd,EACAlB,EACAiB,GACA,EACA,KACA,WACA,MAIa,aAAAC,E,sECnBf,yBAAujB,EAAG,G,qBCA1jBC,EAAOC,QAAU,CACfC,MAAO,CAILC,GAAI,CACFC,KAAMC,OACNC,UAAU,GAGZjB,KAAM,CACJe,KAAMC,OACNC,UAAU,GAIZhB,MAAO,CACLc,KAAM,KACNG,QAAS,MAGXH,KAAM,CACJA,KAAMC,OACNC,UAAU,GAGZE,OAAQ,CACNJ,KAAM,CAACC,OAAQI,QACfF,QAAS,MAGXhB,SAAU,CACRa,KAAMM,QACNH,SAAS,GAGXI,WAAY,CACVP,KAAMC,OACNE,QAAS,MAGXK,WAAY,CACVR,KAAM,CAACK,OAAQJ,QACfE,QAAS,MAGXD,SAAU,CACRF,KAAMM,QACNH,SAAS,GAGXd,QAAS,CACPW,KAAMS,OACNN,QAAS,KAAM,KAGjBO,QAAS,CACPV,KAAMM,QACNH,SAAS,GAIXQ,SAAU,CACRX,KAAMS,OACNN,QAAS,MAGXS,OAAQ,CACNZ,KAAMS,OACNN,QAAS,MAIXU,OAAQ,CACNb,KAAMS,OACNN,QAAS,MAEXW,MAAO,CACLd,KAAMC,OACNE,QAAS,KACT,UAAUY,GACR,MAAO,CACL,OACA,YACA,aACA,OACA,QACAC,SAASD","file":"js/chunk-ee42c6d0.8e27a6b3.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-select',{attrs:{\"id\":_vm.name,\"value\":_vm.value,\"disabled\":_vm.readonly,\"options\":_vm.choices,\"placeholder\":_vm.options.placeholder},on:{\"input\":function($event){return _vm.$emit('input', $event)}}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n\t<v-select\r\n\t\t:id=\"name\"\r\n\t\t:value=\"value\"\r\n\t\t:disabled=\"readonly\"\r\n\t\t:options=\"choices\"\r\n\t\t:placeholder=\"options.placeholder\"\r\n\t\t@input=\"$emit('input', $event)\"\r\n\t></v-select>\r\n</template>\r\n\r\n<script>\r\nimport mixin from '@directus/extension-toolkit/mixins/interface';\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n\tmixins: [mixin],\r\n\tcomputed: {\r\n\t\t...mapState({\r\n\t\t\tinterfaces: state => state.extensions.interfaces || {}\r\n\t\t}),\r\n\t\tchoices() {\r\n\t\t\tlet choices = {};\r\n\r\n\t\t\tlet interfaceNames = Object.keys(this.interfaces);\r\n\r\n\t\t\tif (this.options.relational === false) {\r\n\t\t\t\tinterfaceNames = interfaceNames.filter(key => {\r\n\t\t\t\t\treturn this.interfaces[key].relation === undefined;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tif (this.options.status === false) {\r\n\t\t\t\tinterfaceNames = interfaceNames.filter(key => {\r\n\t\t\t\t\treturn this.interfaces[key].types[0] !== 'status';\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tinterfaceNames.forEach(key => {\r\n\t\t\t\tchoices[key] = this.$helpers.formatTitle(key);\r\n\t\t\t});\r\n\r\n\t\t\treturn choices;\r\n\t\t}\r\n\t}\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.v-select {\r\n\tmargin-top: 0;\r\n\tmax-width: var(--width-medium);\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./input.vue?vue&type=template&id=7bb89a18&scoped=true&\"\nimport script from \"./input.vue?vue&type=script&lang=js&\"\nexport * from \"./input.vue?vue&type=script&lang=js&\"\nimport style0 from \"./input.vue?vue&type=style&index=0&id=7bb89a18&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7bb89a18\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=7bb89a18&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./input.vue?vue&type=style&index=0&id=7bb89a18&lang=scss&scoped=true&\"","module.exports = {\n  props: {\n    // Unique id for this interface. Should be added to the lower level \n    // HTML input element if applicable. This ID will be used in the label's\n    // `for` attribute\n    id: {\n      type: String,\n      required: true\n    },\n    // Name of the field\n    name: {\n      type: String,\n      required: true\n    },\n    // The current value. This can either be the default value, the saved database\n    // value or the current state after the user made an edit\n    value: {\n      type: null,\n      default: null\n    },\n    // Type of the field, eg `string`, `hash`, or `array`\n    type: {\n      type: String,\n      required: true\n    },\n    // Max length\n    length: {\n      type: [String, Number],\n      default: null\n    },\n    // If the field is readonly or not\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    // Name of the collection\n    collection: {\n      type: String,\n      default: null\n    },\n    // Primary key of the item you're editing in this context\n    primaryKey: {\n      type: [Number, String],\n      default: null\n    },\n    // If the field is required or not\n    required: {\n      type: Boolean,\n      default: false\n    },\n    // Field options. A json object based on the interface's meta.json file\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    // If the item that's currently being edited is new\n    newItem: {\n      type: Boolean,\n      default: false\n    },\n    // The relation of the current field. Will contain information on the related\n    // collection and field(s)\n    relation: {\n      type: Object,\n      default: null\n    },\n    // The other fields in the current edit page\n    fields: {\n      type: Object,\n      default: null\n    },\n    // The values of the other fields on the edit page. Can be used for things like\n    // automatically generating a slug based on another field\n    values: {\n      type: Object,\n      default: null\n    },\n    width: {\n      type: String,\n      default: null,\n      validator(val) {\n        return [\n          'half',\n          'half-left',\n          'half-right',\n          'full',\n          'fill'\n        ].includes(val);\n      }\n    }\n  }\n};\n"],"sourceRoot":""}